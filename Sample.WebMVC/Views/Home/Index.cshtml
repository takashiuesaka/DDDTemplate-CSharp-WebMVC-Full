@model IReadOnlyList<Sample.Core.interfaces.dto.DailyTimeRecordDto>
@{
    ViewData["Title"] = "Home Page";
}

<table class="table">
    <thead>
        <tr>
            <td></td>
            <td>Date</td>
            <td>Start Time</td>
            <td>End Time</td>
            <td>Break</td>
            <td>Worktime</td>
            <td>Overtime</td>
        </tr>
    </thead>
    <tbody>
        @foreach (var dailyTimeRecord in Model)
        {
        <tr>
            <td>                
                <input type="button" class="btn-primary" onclick="showEditDialog('@dailyTimeRecord.Id', '@dailyTimeRecord.Date.ToString("yyyy/M/d")', '@dailyTimeRecord.StartTime.ToString("HH:mm")', '@dailyTimeRecord.EndTime.ToString("HH:mm")')" value="Edit" />
            </td>
            <td>@dailyTimeRecord.Date.ToString("yyyy/M/d")</td>
            <td>@dailyTimeRecord.StartTime.ToString("HH:mm")</td>
            <td>@dailyTimeRecord.EndTime.ToString("HH:mm")</td>
            <td>@dailyTimeRecord.BreakTime.ToString(@"hh\:mm")</td>
            <td>@dailyTimeRecord.Worktime.ToString(@"hh\:mm")</td>
            <td>@dailyTimeRecord.Overtime.ToString(@"hh\:mm")</td>
        </tr>

        }
    </tbody>
</table>

<div id="editDialog" style="display:none;">
    @using (Html.BeginForm())
    {
        @Html.ValidationSummary(true)
    <fieldset>
        @Html.Hidden("Id")
        <div class="form-group">
            @Html.Label("Date", "Date")
            @Html.TextBox("Date", "", new { @class = "form-control-plaintext", @readonly = "readnoly" } )
        </div>
        <div class="form-group">
            @Html.Label("StartTime", "StartTime")
            @Html.ValidationMessage("StartTime")
            @Html.TextBox("StartTime", "", new { @class = "form-control" })
        </div>

        <div class="form-group">
            @Html.Label("EndTime", "EndTime")
            @Html.ValidationMessage("EndTime")
            @Html.TextBox("EndTime", "", new { @class = "form-control" })
        </div>

    </fieldset>
    }
</div>

@section Scripts {
    <script type="text/javascript">
        function setDataToForm(id, date, startTime, endTime) {
            $("#editDialog form")
                .find("input[id=Id]").val(id)
                .end()
                .find("input[id=Date]").val(date)
                .end()
                .find("input[id=StartTime]").val(startTime)
                .end()
                .find("input[id=EndTime]").val(endTime);
        }

        function setDataToList(id, date, startTime, endTime, breakTime, worktime, overtime){

        }

        function showEditDialog(id, date, startTime, endTime) {

            setDataToForm(id, date, startTime, endTime);

            $("#editDialog").dialog({
                title: "Edit Time Record",
                width: 550,
                height: 400,
                modal: true,
                buttons: {
                    "Update": function () {
                        $.post("/Home/Edit", { Id: $("#Id").val(), Date: $("#Date").val(), StartTime: $("#StartTime").val(), EndTime: $("#EndTime").val()})
                            .done((data,,jqXHR) => {
                                // TODO 計算した結果をリストに反映する
                            })
                            .fail((jqXHR, textStatus) =>{
                                console.log(jqXHR);
                                console.log(jqXHR.responseJSON);
                            });
                    },
                    "Cancel": function () {
                        $(this).dialog("close");
                    }
                },
                close: function () {
                    $(this).dialog("destroy");
                }
            });
        }
    </script>
}